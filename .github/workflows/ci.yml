name: Python CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install flake8
        run: pip install flake8

#      - name: Run Flake8 and save report
#        run: |
#          mkdir -p reports
#          flake8 . --tee --output-file=reports/flake8.txt
#
#      - name: Upload Flake8 report
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: flake8-report
#          path: reports/flake8.txt

  build:
    name: Build (Install dependencies)
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  test:
    name: Test with coverage
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-asyncio \
                      requests responses flake8 bandit aiogram python-dotenv \
                      aiohttp aiosignal certifi charset-normalizer frozenlist idna multidict \
                      pydantic typing-extensions urllib3 yarl

#      - name: Run tests with coverage
#        run: |
#          mkdir -p coverage
#          pytest app/Tests --verbose --cov=app --cov-report=term --cov-report=xml:coverage/coverage.xml
#
#      - name: Upload Coverage report
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: coverage-report
#          path: coverage/coverage.xml

  security-scan:
    name: Bandit Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit â†’ HTML report
        run: |
          mkdir -p reports
          bandit -r . -f html -o reports/bandit.html || true

      - name: Upload Bandit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: reports/bandit.html
