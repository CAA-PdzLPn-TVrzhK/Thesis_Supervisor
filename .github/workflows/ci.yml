name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Python Lint
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy
          black --check .
          isort --check-only .
          flake8 app/
          mypy app/
      - uses: actions/upload-artifact@v4
        with:
          name: python-lint-report
          path: '**/flake8-report.xml'

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      # Build Python wheel
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          pip install --upgrade build
          python -m build --wheel --outdir dist/
      - uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: dist/*.whl

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      sqlite:
        image: nouchka/sqlite3
    steps:
      - uses: actions/checkout@v4

      # Python tests
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          pip install -r requirements.txt pytest pytest-cov
          pytest --junitxml=pytest-report.xml --cov=app --cov-report=xml
      - uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: pytest-report.xml
      - uses: codecov/codecov-action@v4

  security_scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          pip install bandit
          bandit -r app/ -f xml -o bandit-report.xml
      - uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.xml
